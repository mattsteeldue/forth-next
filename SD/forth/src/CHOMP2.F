FORTH DEFINITIONSDECIMAL   10 LOAD  \ Editor   17 LOAD  \ Case-Of   20 LOAD  \ Debugger   40 LOAD  \ RND   41 LOAD  \ COLOR words definitions    50 LOAD  \ BLEEP   90 LOAD  \ STRING utility   163 LOAD  \ .SPEED EMPTY-BUFFERS \ Safer during debugging. \ BIN utility: BIN    2 BASE !    8 .R    DECIMAL;: D= ( d1 d2 -- f )            \  l1 h1 l2 h2     ROT     \  l1 l2 h1 h2    =       \  l1 l2 f1    >R      \  l1 l2        \ f1    =       \  f2           \ f1    R>      \  f2 f1    AND     \  f;    \ word that waits for next interruptCREATE SYNC-VIDEO ( -- )    HEX    76 C, \ HALT     C3 C, (NEXT) ,    SMUDGE     DECIMAL\ Useful to print six character at a time,\ tipical use:  \ CHAR R UDG+ ( PACMAN ) y x 22 ( AT position ) 6 16 ( YELLOW INK )\ SIX-EMITC:  SIX-EMITC    EMITC EMITC EMITC EMITC EMITC EMITC;: SYNC-EMITC ( c1 c2 c3 c4 c5 c6 -- )    SYNC-VIDEO    EMITC EMITC EMITC EMITC EMITC EMITC    EMITC EMITC EMITC EMITC EMITC EMITC;   0 VARIABLE UDG_1\ reads last key pressed using system variable LASTK: LASTK@ ( -- c )    23560 C@;\ Between operator: true if n is between a and b: BETWEEN  ( n  a b -- f )    >R     \ n  a     OVER   \ n  a  n    > 0=   \ n  a<=n    SWAP   \ a<=n  n        R>     \ a<=n  n  b    > 0=   \ a<=n  n<=b                   AND    \ a<=n & n<=b    ;  \ translate a capital letter in its UDG character code: UDG+  ( c1 -- c2 )    79 +  ;\ compile an UDG literal in the current colon definition: [UDG]  ( -- )    CHAR UDG+ [COMPILE] LITERAL ; IMMEDIATE: UDG@     65 - 8 * 23675 @ + ;    : BIN    2 BASE !    8 .R    DECIMAL ;    : .UDG     CR    UDG@ DUP 8 + SWAP DO        I C@ BIN CR    LOOP    DECIMAL;   \ UDG definitionHERE UDG_1 !\  UDG A B C D    0 C, 255 C,   0 C,   0 C,   0 C,   0 C,   0 C,   0 C,     0 C,   0 C,   0 C,   0 C,   0 C,   0 C, 255 C,   0 C,     0 C, 255 C,   0 C,   0 C,   0 C,   0 C, 255 C,   0 C,     0 C, 248 C,   4 C,   2 C,   2 C,   2 C,   2 C,   2 C,\  UDG E F G    0 C,  31 C,  32 C,  64 C,  64 C,  64 C,  64 C,  64 C,     0 C,  63 C,  64 C, 128 C, 128 C,  64 C,  63 C,   0 C,     0 C, 252 C,   2 C,   1 C,   1 C,   2 C, 252 C,   0 C, \  UDG H I J    2 C,   2 C,   2 C,   2 C,   2 C,   4 C, 248 C,   0 C,    64 C,  64 C,  64 C,  64 C,  64 C,  32 C,  31 C,   0 C,       2 C,   2 C,   2 C,  2  C,   2 C,   2 C,   2 C,   2 C,\  UDG K L M N O    0 C,  24 C,  36 C,  66 C,  66 C,  66 C,  66 C,  66 C,    66 C,  66 C,  66 C,  66 C,  66 C,  36 C,  24 C,   0 C,   64 C,  64 C,  64 C,  64 C,  64 C,  64 C,  64 C,  64 C,    66 C,  66 C,  66 C,  66 C,  66 C,  66 C,  66 C,  66 C,     0 C,   0 C,  56 C, 124 C, 124 C, 124 C,  56 C,   0 C,\  UDG P Q R S    28 C,  62 C,  31 C,  15 C,  31 C,  62 C,  28 C,   0 C,    0 C,  34 C, 119 C, 127 C, 127 C,  62 C,  28 C,   0 C,     0 C,  28 C,  62 C, 124 C, 120 C, 124 C,  62 C,  28 C,     0 C,  56 C, 124 C, 254 C, 254 C, 238 C,  68 C,   0 C, \  UDG T U   56 C, 126 C,  90 C, 219 C, 255 C, 255 C, 255 C, 147 C,     2 C,   6 C,  10 C,  20 C,  36 C, 238 C, 238 C, 102 C,UDG_1 @ \ 23675 ! \ UDG23675 @ \ UDG168 CMOVE\ Maze definition  0 VALUE MAZE-BASE  0 VALUE MAZE-RUN22 21 * VALUE MAZE-DIMHERE TO MAZE-BASESTRING" EAAAAAAAAANAAAAAAAAAD"  DROPSTRING" M.........N.........J"  DROPSTRING" M.EAD.EAD.N.EAD.EAD.J"  DROPSTRING" MOM J.M J.N.M J.M JOJ"  DROPSTRING" M.IBH.IBH.L.IBH.IBH.J"  DROPSTRING" M...................J"  DROPSTRING" M.FCG.K.FCACG.K.FCG.J"  DROPSTRING" M.....N...N...N.....J"  DROPSTRING" IBBBB.MCG.L.FCJ.BBBBH"  DROPSTRING"     J.N.......N.M    "  DROPSTRING" BBBBH.L.E---D.L.IBBBB"  DROPSTRING" /.......M   J.......\"  DROPSTRING" AAAAD.K.I---H.K.EAAAA"  DROPSTRING"     J.N.... ..N.M    "  DROPSTRING" BBBBH.L.FCACG.L.IBBBB"  DROPSTRING" M.........N.........J"  DROPSTRING" MOFCD.FCG.L.FCG.ECGOJ"  DROPSTRING" M...N...........N...J"  DROPSTRING" AAD.L.FCCCCCCCG.L.EAA"  DROPSTRING"   J...............M  "  DROPSTRING"    AAAAAAAAAAAAAAA   "  DROPHERE TO MAZE-RUN MAZE-DIM ALLOT\ Maze-array access.: MAZE  ( x y -- a )     MAZE-RUN + SWAP 1- 22 * + ;: MAZE@ ( x y -- c )     MAZE C@ ;: MAZE! ( c x y -- )     MAZE C! ;\ copy the MAZE-BASE definition to the MAZE-RUN area: SET-MAZE-RUN ( -- )    MAZE-DIM 0    DO       MAZE-BASE I + C@        \ Change A-U character into UDG chr.       DUP [CHAR] A [CHAR] U BETWEEN IF          UDG+        ENDIF       MAZE-RUN  I + C!     LOOP ;   \ used by DISPLAY-MAZE to print one row of the maze: DISPLAY-ONE-ROW ( a n -- )    OVER +      \  a a+n    SWAP        \  a+ a    DO          \          I       \  a+i        C@      \  c        EMITC   \        LOOP ; \ display the whole maze: DISPLAY-MAZE ( -- )    0 0 AT. CR    1 22    DO        050 I 16 + BEEP-PITCH BLEEP-CALC     -1 +LOOP    22 1    DO        I 0  MAZE  COUNT               SPACE DISPLAY-ONE-ROW CR        BLEEP    LOOP    0 0 AT.;    \ _________________________________________________________  0 VARIABLE TOTAL      0 ,   0 VARIABLE SCORE      0 ,   0 VARIABLE HIGH-SCORE 0 , 30 VARIABLE COUNTING   3 VARIABLE LIVES  1 VARIABLE HUNTCHAR R UDG+ VARIABLE PACMAN-FACE14 VARIABLE PACMAN-X12 VARIABLE PACMAN-Y14 VARIABLE PREV-PACMAN-X12 VARIABLE PREV-PACMAN-YBL VARIABLE PREV-PACMANCHAR T UDG+ DUP 2DUP    VARIABLE GHOST-FACE            ,    ,    , 2 VARIABLE GHOST-PROB          3 ,  1 ,  8 , 3 VARIABLE GHOST-COLOR         2 ,  1 ,  5 ,12 VARIABLE GHOST-X            12 , 12 , 12 ,12 VARIABLE GHOST-Y            11 , 11 , 10 ,55 VARIABLE GHOST-DIR          53 , 53 , 55 ,12 VARIABLE PREV-GHOST-X       12 , 12 , 12 ,12 VARIABLE PREV-GHOST-Y       11 , 11 , 10 ,BL VARIABLE PREV-GHOST-MAZE    BL , BL , BL ,: PACMAN-XY@ ( -- x y )    PACMAN-X C@    PACMAN-Y C@      ;    : PACMAN-XY! ( x y -- )    PACMAN-Y C!          PACMAN-X C!;    : PREV-PACMAN-XY@ ( -- x y )    PREV-PACMAN-X C@    PREV-PACMAN-Y C@      ;    : PREV-PACMAN-XY! ( x y -- )    PREV-PACMAN-Y C!         PREV-PACMAN-X C!;    : GHOST-FACE@ ( n -- c )    CELLS     GHOST-FACE + C@;: GHOST-COLOR@ ( n -- c )    CELLS     GHOST-COLOR + C@;: PREV-GHOST-MAZE@ ( n -- c )    CELLS     PREV-GHOST-MAZE + C@;: PREV-GHOST-MAZE! ( c n -- )    CELLS     PREV-GHOST-MAZE + C!;: GHOST-XY@ ( n -- x y )    CELLS DUP       ( 2n 2n )    GHOST-X + C@    ( 2n [a+2n] )    SWAP            ( [a+2n] 2n )    GHOST-Y + C@    ( [a+2n] [a+2n] )  ;    : GHOST-XY! ( x y n -- )    CELLS   >R    GHOST-Y  R  + C!        GHOST-X  R> + C!    ;    : PREV-GHOST-XY@ ( n -- x y )    CELLS DUP     PREV-GHOST-X + C@    SWAP    PREV-GHOST-Y + C@      ;    : PREV-GHOST-XY! ( x y n -- )    CELLS        >R    PREV-GHOST-Y  R  + C!        PREV-GHOST-X  R> + C!    ;    : INIT-ALL ( -- )    [CHAR] R UDG+ PACMAN-FACE !    14 12  PACMAN-XY!      14 12  PREV-PACMAN-XY!    12 11  0 GHOST-XY!    12 12  1 GHOST-XY!    12 12  2 GHOST-XY!    12 10  3 GHOST-XY!     12 11  0 PREV-GHOST-XY!    12 12  1 PREV-GHOST-XY!    12 12  2 PREV-GHOST-XY!    12 10  3 PREV-GHOST-XY!   180.    TOTAL 2@ D+ TOTAL 2!    30     COUNTING      !    56     23560        C! ;: PUT-PACMAN ( -- )    PACMAN-FACE @    PACMAN-XY@  SWAP 22   \ pacman at x,y    6  16                        \ yellow    BL     PREV-PACMAN-XY@ SWAP 22   \ wipe previous    7 16      SYNC-EMITC;: PUT-GHOST ( n -- )   >R    R   GHOST-FACE@           R   GHOST-XY@  SWAP 22    HUNT @ 0 < IF 7 ELSE  R GHOST-COLOR@ THEN 16    R   PREV-GHOST-MAZE@      R>  PREV-GHOST-XY@ SWAP 22    7 16      SYNC-EMITC;: PUT-CHERRY ( -- )    14 11 MAZE@     [UDG] U    - IF        [UDG] U DUP  14 11 MAZE!        11 14 22   2 16            SIX-EMITC     ENDIF;        \ given the character c (destination) say if we can go there: ?PACMAN-TRAIL ( c -- f )    >R    R    BL       =     \ blank    R    [CHAR] . = OR  \ dot    R    [UDG]  U = OR  \ cherry    R    [UDG]  O = OR  \ pill    R    [CHAR] / = OR  \ left tunnel    R>   [CHAR] \ = OR  \ right tunnel;\ given the character c (destination) say if we can go there: ?GHOST-TRAIL ( c -- f )    >R    R    BL       =     \ blank    R    [CHAR] . = OR  \ dot    R    [UDG]  U = OR  \ cherry    R    [UDG]  O = OR  \ pill    R>   [CHAR] - = OR  \ right tunnel;: PILL-ON ( -- )    -1 HUNT !   10. TOTAL 2@ D+ TOTAL 2!     0 COUNTING !;: GO-RIGHT ( -- )     PACMAN-XY@  1+ MAZE@     DUP [CHAR] \ = IF 1 PACMAN-Y ! ENDIF    ?PACMAN-TRAIL IF         1 PACMAN-Y +!        [UDG] R PACMAN-FACE !    ENDIF;: GO-LEFT ( -- )      PACMAN-XY@  1- MAZE@     DUP [CHAR] / = IF 21 PACMAN-Y ! ENDIF    ?PACMAN-TRAIL IF         -1 PACMAN-Y +!        [UDG] P PACMAN-FACE !    ENDIF;: GO-UP  ( -- )      PACMAN-XY@ SWAP 1- SWAP MAZE@     DUP [UDG] O = IF PILL-ON ENDIF    ?PACMAN-TRAIL IF         -1 PACMAN-X +!        [UDG] Q PACMAN-FACE !    ENDIF;: GO-DOWN  ( -- )    PACMAN-XY@ SWAP 1+ SWAP MAZE@     DUP [UDG] O = IF PILL-ON ENDIF    ?PACMAN-TRAIL IF         1 PACMAN-X +!        [UDG] S PACMAN-FACE !    ENDIF;: PACMAN-MOVEMENT ( c -- )    PACMAN-XY@  PREV-PACMAN-XY!    CASE     56 OF GO-RIGHT ENDOF     53 OF GO-LEFT  ENDOF     55 OF GO-UP    ENDOF     54 OF GO-DOWN  ENDOF     ENDCASE;: PACMAN-EAT-DOT ( c -- )    [CHAR] . = IF        1.  SCORE 2@ D+ SCORE 2!        [  0025  -12  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP    ENDIF;: PACMAN-EAT-PILL ( c -- )    [UDG] O = IF        10. SCORE 2@ D+ SCORE 2!        [  0050  25  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP        [  0050  39  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP    ENDIF;: PACMAN-EAT-CHERRY ( c -- )    [UDG] U = IF        10. SCORE 2@ D+ SCORE 2!        10. TOTAL 2@ D+ TOTAL 2!        [  0050  29  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP        [  0050  36  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP    ENDIF;: PACMAN-WALK ( c -- )    >R     R  [UDG]  O  =      R  [CHAR] .  =  OR      R> [UDG]  U  =  OR    0= IF        PACMAN-XY@ PREV-PACMAN-XY@ D=         0= IF         [  0025 -14  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP        ENDIF    ENDIF;: GHOST-RIGHT ( n -- )   >R    R GHOST-XY@  1+  MAZE@     DUP [CHAR] \ = IF 1 GHOST-Y ! ENDIF    ?GHOST-TRAIL     IF        1 GHOST-Y R CELLS + +!    THEN    R> DROP;: GHOST-LEFT ( n -- )    >R    R GHOST-XY@  1-  MAZE@     DUP [CHAR] / = IF 21 GHOST-Y ! ENDIF    ?GHOST-TRAIL     IF        -1 GHOST-Y R CELLS + +!     THEN    R> DROP;: GHOST-DOWN ( n -- )    >R    R GHOST-XY@  SWAP 1+ SWAP MAZE@     ?GHOST-TRAIL     IF        1 GHOST-X R CELLS + +!    THEN    R> DROP;: GHOST-UP ( n -- )    >R    R GHOST-XY@  SWAP 1- SWAP MAZE@     ?GHOST-TRAIL     IF         -1 GHOST-X R CELLS + +!    THEN    R> DROP;: GHOST-MOVEMENT ( c n -- )    >R    R  GHOST-XY@         2DUP    R  PREV-GHOST-XY!       MAZE@     R PREV-GHOST-MAZE!    CASE      56 OF R  GHOST-RIGHT ENDOF    53 OF R  GHOST-LEFT  ENDOF    55 OF R  GHOST-UP    ENDOF    54 OF R  GHOST-DOWN  ENDOF    ENDCASE    R> DROP;: GHOST-DECISION ( n -- )    >R    R      GHOST-XY@     R PREV-GHOST-XY@     D= IF            R CELLS         GHOST-PROB + @         RND IF            LASTK@                    ELSE            3 RND 53 +         THEN        GHOST-DIR R CELLS + !    THEN     R> DROP;: INIT-DISPLAY    0 PAPER. 0 BORDER. 7 INK. CLS     SET-MAZE-RUN    DISPLAY-MAZE    0 20 AT. ." HIGH "    HIGH-SCORE 2@     <# # # # # # #> TYPE    0 PUT-GHOST    1 PUT-GHOST    2 PUT-GHOST    3 PUT-GHOST    PUT-PACMAN;: INTERLUDE    27 0    DO        020 I BEEP-PITCH BLEEP-CALC     1 +LOOP    1 28    DO        020 I BEEP-PITCH BLEEP-CALC     -1 +LOOP    CLS    10 31 AT. [UDG] O EMITC    28 1    DO        10 I AT.         SYNC-VIDEO          BL EMIT        3 16 EMITC EMITC [UDG] T EMITC        SYNC-VIDEO          BL BL EMITC EMITC        6 16 EMITC EMITC [UDG] R EMITC        BLEEP        ?TERMINAL IF QUIT THEN    1 +LOOP    0 27    DO        10 I AT.         SYNC-VIDEO          7 16 EMITC EMITC [UDG] T  EMITC        BL BL EMITC EMITC        SYNC-VIDEO          6 16 EMITC EMITC [UDG] P EMITC        BL EMIT        BLEEP        ?TERMINAL IF QUIT THEN    -1 +LOOP;: HEART-BEAT    PUT-PACMAN     0 PUT-GHOST     1 PUT-GHOST     2 PUT-GHOST     3 PUT-GHOST     \ move your pacman    LASTK@   \ so pacman continues to walk if you don't press anything    PACMAN-MOVEMENT    PACMAN-X @ PACMAN-Y @ MAZE@           \ takes current cell    BL PACMAN-X @ PACMAN-Y @ MAZE!        \ blank current cell    DUP PACMAN-EAT-DOT    DUP PACMAN-EAT-PILL    DUP PACMAN-EAT-CHERRY        PACMAN-WALK    \ Move four ghosts    4 0 DO         I GHOST-DECISION         I CELLS GHOST-DIR + @        I GHOST-MOVEMENT     LOOP    1  COUNTING +!    60 COUNTING @ < IF 1 HUNT ! ENDIF    500 RND 0= IF PUT-CHERRY ENDIF        \ Display lives and score       0  1 AT.     6 16 EMITC EMITC \ for INK 6    [UDG] P EMITC     7 16 EMITC EMITC \ for INK 7    BL EMITC LIVES ?    0 6  AT. ." SCORE "     SCORE 2@     <# # # # # # #> TYPE        2 24 AT. ." HUNT " HUNT ?       ;: GHOST-CATCH    HUNT @ 1 =    IF         -1 LIVES +!        LIVES @ 0=         IF           HIGH-SCORE 2@            SCORE 2@ DMINUS D+           0< IF               SCORE 2@  HIGH-SCORE 2!               SCORE 2@ DMINUS D+           THEN           DROP           INTERLUDE                INIT-ALL           INIT-DISPLAY        THEN    ELSE        4 0 DO            12 12  I GHOST-XY!            10. SCORE 2@ D+ SCORE 2!            [ 0005 20  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP            [ 0005 10  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP            [ 0010 10  BEEP-PITCH BLEEP-CALC SWAP ] LITERAL LITERAL BLEEP        LOOP    THEN;: RUN-GAME    0 .SPEED    BEGIN        HEART-BEAT        SCORE 2@ TOTAL 2@ D=         IF             INTERLUDE                 INIT-ALL            INIT-DISPLAY        THEN                0 GHOST-XY@ PACMAN-XY@ D=        1 GHOST-XY@ PACMAN-XY@ D=        2 GHOST-XY@ PACMAN-XY@ D=        3 GHOST-XY@ PACMAN-XY@ D=        OR OR OR IF            GHOST-CATCH        THEN                        ?TERMINAL     UNTIL    3 .SPEED;: NEW-GAME    0 PAPER. 0 BORDER. 7 INK. CLS     0 .SPEED    INTERLUDE    0.  TOTAL 2!    0.  SCORE 2!    INIT-ALL    INIT-DISPLAY    RUN-GAME    0 0 AT.    QUIT;\ NEW-GAMEQUITQUITQUITSTOP-ME-HERE 
     
     
     